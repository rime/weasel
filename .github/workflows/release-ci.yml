name: Release CI

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.*'
  workflow_dispatch:

jobs:
  build-and-release:
    permissions:
      contents: write
    runs-on: windows-2019
    env:
      boost_version: 1.84.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost_1_84_0
      librime_build: 'submodule'
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure build environment
        shell: bash
        run: |
          cp env.vs2019.bat env.bat
          echo git_ref_name="$(git describe --always)" >> $GITHUB_ENV
          librime_id=$(git submodule foreach --quiet 'if [ $name == "librime" ]; then echo `git rev-parse HEAD`; fi')
          echo "librime_id is $librime_id"
          echo "librime_id=$librime_id" >> $GITHUB_ENV

      # cache boost
      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BOOST_ROOT }}
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      # install boost if not cached
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        shell: bash
        run: |
          ./install_boost.bat
          ./build.bat boost arm64

      # add msbuild to PATH
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      # use upper stream released librime files if stable release
      #- name: Copy Rime files
      #  run: |
      #    .\github.install.bat

      # cache librime
      - name: Cache librime
        if: env.librime_build == 'submodule'
        id: cache-librime
        uses: actions/cache@v4
        with:
          path: |
            librime
          key: ${{ runner.os }}-librime-${{ env.librime_id }}-dual

      # build librime if not cached
      - name: Build librime
        if: ${{ env.librime_build == 'submodule' && steps.cache-librime.outputs.cache-hit != 'true' }}
        env:
          RIME_PLUGINS: hchunhui/librime-lua lotem/librime-octagram rime/librime-predict
        shell: bash
        run: |
          # load plugins
          pushd librime
          ./action-install-plugins-windows.bat
          popd
          ./build.bat librime
          cp librime/build_x64/bin/Release/rime.pdb output/
          cp librime/build_Win32/bin/Release/rime.pdb output/Win32

      # copy librime files if cached
      - name: Copy librime built files cached
        if: ${{ env.librime_build == 'submodule' && steps.cache-librime.outputs.cache-hit == 'true' }}
        shell: bash
        run: |
          cp ./librime/dist_x64/lib/rime*.lib ./lib64/
          cp ./librime/dist_x64/lib/rime.dll ./output/
          cp ./librime/dist_x64/include/*.h ./include/
          cp ./librime/dist_Win32/lib/rime*.lib ./lib/
          cp ./librime/dist_Win32/lib/rime.dll ./output/Win32/
          cp librime/build_x64/bin/Release/rime.pdb output/
          cp librime/build_Win32/bin/Release/rime.pdb output/Win32

      - name: Build data
        run: |
          .\build.bat data

      - name: Build Weasel Release
        id: build_weasel
        if: startsWith(github.ref, 'refs/tags/')
        env:
          RELEASE_BUILD: 1
        run: |
          .\build.bat arm64 installer

      - name: Build Weasel Nightly
        id: build_weasel_nightly
        if: github.ref == 'refs/heads/master'
        run: |
          .\build.bat arm64 installer

      - name: Compress Debug Symbols
        shell: pwsh
        run: |
          output\7z.exe a -t7z "./output/archives/debug_symbols.7z" "output/*.pdb" -r

      - name: Extract changelog
        shell: pwsh
        run: |
          .\extract_changelog.ps1
        if: startsWith(github.ref, 'refs/tags/')

      # create nightly release
      - name: Create Nightly release
        if: ${{ github.repository == 'rime/weasel' && github.ref == 'refs/heads/master' }}
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
          prerelease: true
          title: "Nightly Build"
          files: |
            ./output/archives/weasel*.exe
            ./output/archives/debug_symbols.7z
        
      # create stable release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./output/archives/weasel*.exe
            ./output/archives/debug_symbols.7z
          body_path: ${{ github.workspace }}/RELEASE_CHANGELOG.md
        
