name: Commit CI

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    tags:
      - '![0-9]+.*'
    paths:
      - '**/**'
      - '!*.md'
      - '!.gitignore'
  pull_request:

jobs:
  build:
    runs-on: windows-2022
    env:
      librime_build: 'submodule'
      boost_version: 1.84.0
      BOOST_ROOT: ${{ github.workspace }}\deps\boost_1_84_0
    steps:
      - name: Checkout last commit
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install llvm
        run: choco install llvm --version=17.0.6

      - name: Code style lint
        shell: bash
        run: ./clang-format.sh -i

      - name: Configure build environment
        shell: bash
        run: |
          cp env.vs2022.bat env.bat
          librime_id=$(git submodule foreach --quiet 'if [ $name == "librime" ]; then echo `git rev-parse HEAD`; fi')
          echo "librime_id is $librime_id"
          echo "librime_id=$librime_id" >> $GITHUB_ENV

      - name: Cache Boost
        id: cache-boost
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.BOOST_ROOT }}
          key: ${{ runner.os }}-boost-${{ env.boost_version }}

      # install boost if not cached
      - name: Install Boost
        if: steps.cache-boost.outputs.cache-hit != 'true'
        shell: bash
        run: |
          ./install_boost.bat
          ./build.bat boost arm64

      # add msbuild to PATH
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      # cache librime
      - name: Cache librime
        if: env.librime_build == 'submodule'
        id: cache-librime
        uses: actions/cache@v4
        with:
          path: |
            librime
          key: ${{ runner.os }}-librime-${{ env.librime_id }}

      # build librime if not cached
      - name: Build librime
        if: ${{ env.librime_build == 'submodule' && steps.cache-librime.outputs.cache-hit != 'true' }}
        env:
          RIME_PLUGINS: hchunhui/librime-lua lotem/librime-octagram rime/librime-predict
        shell: bash
        run: |
          # load plugins
          pushd librime
          ./action-install-plugins-windows.bat
          popd
          ./build.bat librime

      # build librime if cached
      - name: Copy librime built files cached
        if: ${{ env.librime_build == 'submodule' && steps.cache-librime.outputs.cache-hit == 'true' }}
        shell: bash
        run: |
          cp ./librime/dist/lib/rime* ./lib/
          cp ./librime/dist/lib/rime.dll ./output/
          cp ./librime/dist/include/*.h ./include/

      - name: Build Weasel
        id: build_weasel
        shell: bash
        run: |
          ./build.bat data
          ./build.bat hant arm64
          ./build.bat installer

      - name: Compress Debug Symbols
        shell: pwsh
        run: |
          Compress-Archive -Path output\*.pdb -CompressionLevel Optimal -DestinationPath .\output\archives\symbols.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          path: |
            .\output\archives\weasel*.exe
            .\output\archives\symbols.zip
